{"ast":null,"code":"var _jsxFileName = \"D:\\\\web projects\\\\R-M-Character-Wiki\\\\src\\\\Pages\\\\Episodes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Cards from \"../components/Cards/Cards\";\nimport InputGroup from \"../components/Filters/Category/InputGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Episodes = () => {\n  _s();\n  let [id, setID] = useState(1);\n  let [info, setInfo] = useState([]);\n  let [results, setResults] = useState([]);\n  let {\n    air_date,\n    episode,\n    name\n  } = info;\n  let api = `https://rickandmortyapi.com/api/episode/${id}`;\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then(res => res.json());\n      setInfo(data);\n      let a = await Promise.all(data.characters.map(x => {\n        return fetch(x).then(res => {\n          return res.json();\n        });\n      }));\n      setResults(a);\n    })();\n  }, [api]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center mb-3\",\n        children: [\"Episode :\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-primary\",\n          children: name === \"\" ? \"Unkown\" : name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"text-center mb-4\",\n        children: [\"Air Date : \", air_date === \"\" ? \"Unkown\" : air_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-3 col-12 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-center mb-4\",\n          children: \"Pick Episodes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          total: 51,\n          name: \"Episode\",\n          setID: setID\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-8 col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(Cards, {\n            page: \"/episodes/\",\n            results: results\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Episodes, \"uD05OmETtZkAnCzL1G1+b9lIcEE=\");\n_c = Episodes;\nexport default Episodes;\nvar _c;\n$RefreshReg$(_c, \"Episodes\");","map":{"version":3,"names":["React","useState","useEffect","Cards","InputGroup","jsxDEV","_jsxDEV","Episodes","_s","id","setID","info","setInfo","results","setResults","air_date","episode","name","api","data","fetch","then","res","json","a","Promise","all","characters","map","x","className","children","fileName","_jsxFileName","lineNumber","columnNumber","total","page","_c","$RefreshReg$"],"sources":["D:/web projects/R-M-Character-Wiki/src/Pages/Episodes.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Cards from \"../components/Cards/Cards\";\r\nimport InputGroup from \"../components/Filters/Category/InputGroup\";\r\n\r\nconst Episodes = () => {\r\n  let [id, setID] = useState(1);\r\n  let [info, setInfo] = useState([]);\r\n  let [results, setResults] = useState([]);\r\n  let { air_date, episode, name } = info;\r\n\r\n  let api = `https://rickandmortyapi.com/api/episode/${id}`;\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      let data = await fetch(api).then((res) => res.json());\r\n      setInfo(data);\r\n\r\n      let a = await Promise.all(\r\n        data.characters.map((x) => {\r\n          return fetch(x).then((res) => {\r\n            return res.json();\r\n          });\r\n        })\r\n      );\r\n\r\n      setResults(a);\r\n    })();\r\n  }, [api]);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <h1 className=\"text-center mb-3\">\r\n          Episode :{\" \"}\r\n          <span className=\"text-primary\">{name === \"\" ? \"Unkown\" : name}</span>\r\n        </h1>\r\n\r\n        <h5 className=\"text-center mb-4\">\r\n          Air Date : {air_date === \"\" ? \"Unkown\" : air_date}\r\n        </h5>\r\n      </div>\r\n      <div className=\"row mb-4\">\r\n        <div className=\"col-lg-3 col-12 mb-4\">\r\n          <h4 className=\"text-center mb-4\">Pick Episodes</h4>\r\n          <InputGroup total={51} name=\"Episode\" setID={setID} />\r\n        </div>\r\n        <div className=\"col-lg-8 col-12\">\r\n          <div className=\"row\">\r\n            <Cards page=\"/episodes/\" results={results} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Episodes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}